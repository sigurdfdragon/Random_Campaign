#textdomain wesnoth-Random_Campaign

#define RC_LOAD_ERA
    # This reads all the faction files and loads each era into an array
    # RC_START_MENU, RC_SIDE_COMPUTER & RC_UPDATE_PLAYER_RECRUIT make use of this info
    # Both arrays must be the same length and contain the same set of
    # faction id's in order so upgrading the recruit list later will work properly
    [set_variables]
        name=era[0]
        mode=replace
        [value]
            id=default
            {multiplayer/factions/loyalists-default.cfg}
            {multiplayer/factions/rebels-default.cfg}
            {multiplayer/factions/northerners-default.cfg}
            {multiplayer/factions/undead-default.cfg}
            {multiplayer/factions/knalgans-default.cfg}
            {multiplayer/factions/drakes-default.cfg}
            {multiplayer/factions/khalifate-default.cfg}
        [/value]
    [/set_variables]
    # Insert Dwarvish Runesmith in leader list for Knalgan Alliance
    {VARIABLE era[0].multiplayer_side[4].leader ("$era[0].multiplayer_side[4].leader" + ",Dwarvish Runesmith")}
    [set_variables]
        name=era[1]
        mode=replace
        [value]
            id=heroes
            {multiplayer/factions/loyalists-aoh.cfg}
            {multiplayer/factions/rebels-aoh.cfg}
            {multiplayer/factions/northerners-aoh.cfg}
            {multiplayer/factions/undead-aoh.cfg}
            {multiplayer/factions/knalgans-aoh.cfg}
            {multiplayer/factions/drakes-aoh.cfg}
            {multiplayer/factions/khalifate-aoh.cfg}
        [/value]
    [/set_variables]
    # Insert Dwarvish Runemaster in leader list for Knalgan Alliance
    {VARIABLE era[1].multiplayer_side[4].leader ("$era[1].multiplayer_side[4].leader" + ",Dwarvish Runemaster")}
    [set_variables]
        name=era[2]
        mode=replace
        [value]
            id=legends
            {~add-ons/Era_of_Legends/factions/loyalists-eol.cfg}
            {~add-ons/Era_of_Legends/factions/rebels-eol.cfg}
            {~add-ons/Era_of_Legends/factions/northerners-eol.cfg}
            {~add-ons/Era_of_Legends/factions/undead-eol.cfg}
            {~add-ons/Era_of_Legends/factions/knalgans-eol.cfg}
            {~add-ons/Era_of_Legends/factions/drakes-eol.cfg}
            {~add-ons/Era_of_Legends/factions/khalifate-eol.cfg}
        [/value]
    [/set_variables]
	# Add flags for each faction
	{FOREACH era i}
		{FOREACH era[$i].multiplayer_side j}
			[switch]
				variable=j
				[case]
					value=0
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/loyalist-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/loyalist-flag-icon.png"}
				[/case]
				[case]
					value=1
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/wood-elvish-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/wood-elvish-flag-icon.png"}
				[/case]
				[case]
					value=2
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/ragged-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/ragged-flag-icon.png"}
				[/case]
				[case]
					value=3
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/undead-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/undead-flag-icon.png"}
				[/case]
				[case]
					value=4
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/knalgan-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/knalgan-flag-icon.png"}
				[/case]
				[case]
					value=5
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/long-flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/long-flag-icon.png"}
				[/case]
				[case]
					value=6
					{VARIABLE era[$i].multiplayer_side[$j].flag "flags/flag-[1~4].png:150"}
					{VARIABLE era[$i].multiplayer_side[$j].flag_icon "flags/flag-icon.png"}
				[/case]
			[/switch]
		{NEXT j}
	{NEXT i}
#enddef

#define RC_CLEAR_ERA
    {CLEAR_VARIABLE era}
#enddef

#define RC_SIDE_PLAYER GOLD INCOME
    # Player Side
    # Relevant settings & effects for the player
    # Side for Scenario 1 and on. Contains leader id for recalling
    [side]
        side=1
        save_id=Player1
        controller=human
        persistent=1
        team_name=1
        type=Peasant # Placeholder
        id="Commander" # Custom Campaign Compatability
        fog=yes
        shroud=yes
        gold={GOLD}
        income={INCOME}
        village_gold=1
    [/side]

    carryover_percentage=0
    carryover_add=no

    [event]
        name=prestart
        [store_turns]
            variable=player1.turn_limit
        [/store_turns]
        [objectives]
            side=1
            [objective]
                description= _ "Defeat enemy leader"
                condition=win
            [/objective]
            [objective]
                description= _ "Death of your leader"
                condition=lose
            [/objective]
            [objective]
                description= _ "Turns run out"
                condition=lose
                show_turn_counter=yes
                [show_if]
                    {VARIABLE_CONDITIONAL player1.turn_limit not_equals -1}
                [/show_if]
            [/objective]
        [/objectives]

        # Set player's color, flag, & visibility choices
        [modify_side]
            side=1
            color=$player1.color
            flag=$player1.flag
            flag_icon=$player1.flag_icon
            fog=$player1.fog
            shroud=$player1.shroud
        [/modify_side]

        # Reinsert the recruitment_pattern because it doesn't persist with
        # rest of player data in a persistent side.
        [modify_side]
            side=1
            [ai]
                recruitment_pattern=$player1.recruitment_pattern
            [/ai]
        [/modify_side]
    [/event]

    # upon victory, clear the fog & shroud
    # so player can see the map
    [event]
        name=victory
        [modify_side]
            side=1
            fog=no
            shroud=no
        [/modify_side]
    [/event]
#enddef

#define RC_UPDATE_PLAYER_RECRUIT
    [event]
        name=enemies defeated
        [message]
            speaker=narrator
            image=wesnoth-icon.png
            message= _ "Your string of victories has made an impression. Stronger recruits will now answer your call."
        [/message]
        {RC_LOAD_ERA}
        {LOOKUP_INDEX era[1].multiplayer_side id $player1.faction index}
        [set_recruit]
            side=1
            recruit=$era[1].multiplayer_side[$index].recruit
        [/set_recruit]

        [modify_side]
            side=1
            [insert_tag]
                name=ai
                variable=era[1].multiplayer_side[$index].ai
            [/insert_tag]
        [/modify_side]

        [lua]
            code=<<
                wesnoth.set_variable("temp_side", wesnoth.sides[1].__cfg)
            >>
        [/lua]
        {LOOKUP_INDEX temp_side.ai.aspect id "recruitment_pattern" index}
        {VARIABLE player1.recruitment_pattern "$temp_side.ai.aspect[$index].facet.value"}
        {CLEAR_VARIABLE temp_side,index}

        {CLEAR_VARIABLE index}
        {RC_CLEAR_ERA}
    [/event]
#enddef

#define RC_OPPONENT_LIST_START
    # Set the initial contents of opponent_choice.list
    # It is opponent_choice.list so that it is
    # easier to read in the :inspect listing
    [event]
        name=prestart
        [set_variables]
            name=opponent_choice.list
            mode=replace
            [split]
                list="Loyalists,Rebels,Northerners,Undead,Knalgan Alliance,Drakes,Khalifate"
                key=opponent
                separator=,
                remove_empty=yes
            [/split]
        [/set_variables]
    [/event]
#enddef

#define RC_SIDE_COMPUTER SIDE ERA G1 G2 G3 G4 I1 I2 I3 I4
    # Make a random enemy for the side & era specified
    [side]
        side={SIDE}
        controller=ai
        no_leader=yes
        team_name=2
        fog=no
        shroud=no
        gold={ON_DIFFICULTY4 {G1} {G2} {G3} {G4}}
        income={ON_DIFFICULTY4 {I1} {I2} {I3} {I4}}
        village_gold=1
    [/side]

    [event]
        name=prestart
        # This makes an enemy faction.
        # This extracts the needed info out of the Era array to make the faction.
        {RC_LOAD_ERA}

        # Which era to pick from
        {LOOKUP_INDEX era id {ERA} index.era}

        # randomly choose a faction from the era
        # This section insures that no opponent is repeated during the campagin
        # After an opponent is chosen, it is removed from the array
        [set_variable]
            name=opponent_list
            [join]
                variable=opponent_choice.list
                key=opponent
                separator=,
                remove_empty=yes
            [/join]
        [/set_variable]
        {VARIABLE_OP opponent rand $opponent_list}
        {LOOKUP_INDEX opponent_choice.list opponent $opponent index}
        {CLEAR_VARIABLE opponent_choice.list[$index].opponent}
        {LOOKUP_INDEX era[$index.era].multiplayer_side id $opponent index.faction}
        {CLEAR_VARIABLE opponent_list,opponent}

        # Now we have era & faction, randomly pick a leader
        [if]
            {VARIABLE_CONDITIONAL era[$index.era].multiplayer_side[$index.faction].random_leader equals $null}
            [then]
                {VARIABLE_OP leader rand $era[$index.era].multiplayer_side[$index.faction].leader}
            [/then]
            [else]
                {VARIABLE_OP leader rand $era[$index.era].multiplayer_side[$index.faction].random_leader}
            [/else]
        [/if]

        # Now that we have everything, make the side
        # Make the leader
        [unit]
            side={SIDE}
            id=Enemy Commander
            type=$leader
            canrecruit=yes
            random_gender=yes
            placement=map,leader
            # All leaders get powerful trait
            [modifications]
                {RC_TRAIT_POWERFUL}
            [/modifications]
        [/unit]
        {RC_QUICK_4MP_LEADERS {SIDE}}

        # Change side color to complement player choice
        {RC_COLOR_ADJUST $player1.color enemy_color}
        [modify_side]
            side={SIDE}
            color=$enemy_color
        [/modify_side]
        {CLEAR_VARIABLE enemy_color}
		
		# Set appropriate flag.
		[modify_side]
			side={SIDE}
			flag=$era[$index.era].multiplayer_side[$index.faction].flag
			flag_icon=$era[$index.era].multiplayer_side[$index.faction].flag_icon
		[/modify_side]

        # Set the recruit_pattern
        [modify_side]
            side={SIDE}
            [insert_tag]
                name=ai
                variable=era[$index.era].multiplayer_side[$index.faction].ai
            [/insert_tag]
        [/modify_side]
        # Set the recruit list
        [set_recruit]
            side={SIDE}
            recruit=$era[$index.era].multiplayer_side[$index.faction].recruit
        [/set_recruit]
        {CLEAR_VARIABLE leader,index}
        {RC_CLEAR_ERA}
    [/event]
#enddef
