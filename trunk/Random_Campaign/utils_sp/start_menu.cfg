#textdomain wesnoth-Random_Campaign

#define RC_START_MENU
    # Present a menu that lets the player choose the faction that they
    # want to play for the duration of the campagin.
    # This is called from the initial campaign scenario.

    # As the player's leader unit is made at the
    # end of the menu, a side is needed.
    [side]
        side=1
        save_id=Player1
        controller=human
        persistent=yes
        no_leader=yes
        team_name=1
    [/side]

    # The player's choices are taken, and the player's faction is made
    # The start menu works by interfacing with the era array
    [event]
        name=prestart
        {RC_LOAD_ERA}
        
        # Choose your faction
        # This part reads throught the era array and makes menu choices with image and name
        {FOREACH era[0].multiplayer_side i}
            {VARIABLE faction_choice[$i].message "&$era[0].multiplayer_side[$i].image~RC(magenta>red)=$era[0].multiplayer_side[$i].name="}
            [set_variables]
                name=faction_choice[$i].command
                [value]
                    {VARIABLE player.faction $era[0].multiplayer_side[$i].id}
                    {VARIABLE player.recruit $era[0].multiplayer_side[$i].recruit}
                [/value]
            [/set_variables]
        {NEXT i}

        # Present the faction list
        [message]
            speaker=narrator
            message= _ "Choose your faction:"
            [insert_tag]
                name=option
                variable=faction_choice
            [/insert_tag]
        [/message]
        {CLEAR_VARIABLE faction_choice}

        # Choose your leader
        # This reads the leader list from the chosen faction
        # and assembles a menu with image and name.
        
        # Get the leader list
        {LOOKUP_INDEX era[0].multiplayer_side id $player.faction index}
        [set_variables]
            name=leader_choice
            mode=replace
            [split]
                list=$era[0].multiplayer_side[$index].leader
                key=unit_type
                separator=,
                remove_empty=yes
            [/split]
        [/set_variables]
        {CLEAR_VARIABLE index}
		
		# Insert Dwarvish Runesmith in leader list if faction is Knalgans
		[if]
			{VARIABLE_CONDITIONAL player.faction equals "Knalgan Alliance"}
			[then]
				[set_variables]
					name=leader_choice
					mode=append
					[value]
						unit_type=Dwarvish Runesmith
					[/value]
				[/set_variables]
			[/then]
		[/if]

        # Use lua to extract image & name for the menu
        # then putting the data back into leader_choice
        {FOREACH leader_choice i}
            # using lua to extract info is more elegant than making a dummy unit
            {VARIABLE unit_type $leader_choice[$i].unit_type}
            [lua]
                code=<<
                    local unit = wesnoth.get_variable("unit_type")
                    wesnoth.set_variable("leader.name", wesnoth.get_unit_type(unit).__cfg.name)
                    wesnoth.set_variable("leader.image", wesnoth.get_unit_type(unit).__cfg.image)
                >>
            [/lua]
            {VARIABLE leader_choice[$i].message "&$leader.image~RC(magenta>red)=$leader.name="}
            [set_variables]
                name=leader_choice[$i].command
                [value]
                    {VARIABLE player.leader $leader_choice[$i].unit_type}
                [/value]
            [/set_variables]
            {CLEAR_VARIABLE unit_type,leader,leader_choice[$i].unit_type}
        {NEXT i}
        
        # Present the leader list
        [message]
            speaker=narrator
            message= _ "Choose your leader:"
            [insert_tag]
                name=option
                variable=leader_choice
            [/insert_tag]
        [/message]
        {CLEAR_VARIABLE leader_choice}

        # Choose gender of leader
        # Use lua to check if unit has gender options,
        # if not, don't show this part of the menu
        {VARIABLE unit_type $player.leader}
        [lua]
            code=<<
                local unit = wesnoth.get_variable("unit_type")
                wesnoth.set_variable("gender_choice", wesnoth.get_unit_type(unit).__cfg.gender)
            >>
        [/lua]
        {CLEAR_VARIABLE unit_type}
        [message]
            [show_if]
                {VARIABLE_CONDITIONAL gender_choice equals "male,female"}
            [/show_if]
            speaker=narrator
            message= _ "Choose a gender for your leader:"
            [option]
                message=_"=Male="
                [command]
                    {VARIABLE player.gender "male"}
                [/command]
            [/option]
            [option]
                message=_"=Female="
                [command]
                    {VARIABLE player.gender "female"}
                [/command]
            [/option]
        [/message]
        {CLEAR_VARIABLE gender_choice}

		# Choose three traits for leader
		[set_variables]
			name=trait_array
			[value]
				{TRAIT_STRONG}
				{TRAIT_DEXTROUS}
				{TRAIT_QUICK}
				{TRAIT_INTELLIGENT}
				{TRAIT_RESILIENT}
				{TRAIT_HEALTHY}
				{TRAIT_FEARLESS}
			[/value]
		[/set_variables]

		{FOREACH trait_array.trait i}
			[if]
				{VARIABLE_CONDITIONAL player.gender equals female}
				[then]
					{VARIABLE trait_choice[$i].message $trait_array.trait[$i].female_name}
				[/then]
				[else]
					{VARIABLE trait_choice[$i].message $trait_array.trait[$i].male_name}
				[/else]
			[/if]
			[set_variables]
				name=trait_choice[$i].command
				[value]
					{VARIABLE choice $i}
				[/value]
			[/set_variables]	
		{NEXT i}

		{VARIABLE j 0}
		[while]
			{VARIABLE_CONDITIONAL j less_than 3}
			[do]
				[message]
					speaker=narrator
					message=_"Select three traits for your leader:"
					[insert_tag]
						name=option
						variable=trait_choice
					[/insert_tag]
				[/message]
				
				# choice is recorded in an array, and the option is turned gold
				# and deactivated for future choices
				{VARIABLE chosen_traits.trait[$j] $choice}
				[set_variables]
					name=trait_choice[$choice].command
					mode=replace
					[value]
						{VARIABLE choice "chosen"}
					[/value]
				[/set_variables]
				[if]
					{VARIABLE_CONDITIONAL choice not_equals "chosen"}
					[then]
						[if]
							{VARIABLE_CONDITIONAL player.gender equals female}
							[then]
								{VARIABLE trait_choice[$choice].message "<span color='#BCB088'>$trait_array.trait[$choice].female_name</span>"}
							[/then]
							[else]
								{VARIABLE trait_choice[$choice].message "<span color='#BCB088'>$trait_array.trait[$choice].male_name</span>"}
							[/else]
						[/if]
						{VARIABLE_OP j add 1}
					[/then]
				[/if]
			[/do]
		[/while]
		{CLEAR_VARIABLE j, choice}

        # Enter a name for leader
        [message]
            speaker=narrator
            message= _ "Enter a name for your leader:"
            [text_input]
                variable=player.name
                max_length=32
            [/text_input]
        [/message]

        # Now that we have everything, make the player side
        [unit]
            side=1
            id="Main Leader" # Custom Campaign Compatability
			role="Leader"    # Custom Campaign Compatability
            type=$player.leader
            gender=$player.gender
            name=$player.name
            canrecruit=yes
            placement=map,leader
			[modifications]
				[insert_tag]
					name=trait
					variable=trait_array.trait[$chosen_traits.trait[0]]
				[/insert_tag]
				[insert_tag]
					name=trait
					variable=trait_array.trait[$chosen_traits.trait[1]]
				[/insert_tag]
				[insert_tag]
					name=trait
					variable=trait_array.trait[$chosen_traits.trait[2]]
				[/insert_tag]
			[/modifications]
        [/unit]
		{CLEAR_VARIABLE trait_choice,chosen_traits,trait_array}
		
        [set_recruit]
            side=1
            recruit=$player.recruit
        [/set_recruit]
        
        # This is added only so a recruitment_pattern can be extracted by save_to_custom.cfg
        # Otherwise we don't need a recruitment_pattern for a player side
        # It is injected and reextracted because we have to account for knalgans-default.cfg
        # being different than the rest of the factions
        {LOOKUP_INDEX era[0].multiplayer_side id $player.faction index}
        [modify_side]
            side=1
            [insert_tag]
                name=ai
                variable=era[0].multiplayer_side[$index].ai
            [/insert_tag]
        [/modify_side]
        {CLEAR_VARIABLE index}
        [lua]
            code=<<
                wesnoth.set_variable("temp_side", wesnoth.sides[1].__cfg)
            >>
        [/lua]
        {LOOKUP_INDEX temp_side.ai.aspect id "recruitment_pattern" index}
        {VARIABLE player.recruitment_pattern "$temp_side.ai.aspect[$index].facet.value"}
        {CLEAR_VARIABLE temp_side,index}
        
        {RC_CLEAR_ERA}
    [/event]
#enddef
