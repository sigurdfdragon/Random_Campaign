#textdomain wesnoth-Random_Campaign

#define RC_LOAD_ERA
    # This reads the chosen era, derives two other eras and loads each era into an array
    # RC_START_MENU, RC_SIDE_COMPUTER & RC_UPDATE_PLAYER_RECRUIT make use of this info
    # Both arrays must be the same length and contain the same set of
    # faction id's in order so upgrading the recruit list later will work properly
    [lua]
        code=<< wesnoth.dofile "~add-ons/Random_Campaign/lua/load_era.lua" >>
    [/lua]
#enddef

#define RC_CLEAR_ERA
    {CLEAR_VARIABLE era}
#enddef

#define RC_SIDE_PLAYER
    # Player Side
    # Relevant settings & effects for the player
    # Side for Scenario 1 and on. Contains leader id for recalling
    [side]
        side=1
        save_id=Player1
        team_name=Team 1
        controller=human
        persistent=yes
        type=Peasant # Placeholder
        id="Commander" # Custom Campaign Compatibility
        # gold & income set in gold_and_income.cfg
    [/side]

    carryover_percentage=0
    carryover_add=no

    [event]
        name=prestart

        # Custom Campaign Compatibility
        [if]
            {VARIABLE_CONDITIONAL custom_campaign.modification equals yes}
            [then]
                [lua]
                    code=<< wesnoth.dofile "~add-ons/Random_Campaign/lua/cc_starting_recall.lua" >>
                [/lua]
            [/then]
        [/if]

        # set & show the player the objectives for the map
        [if]
            {VARIABLE_CONDITIONAL custom_campaign.modification equals yes}
            [then]
                # Custom Campaign Comptability
                [lua]
                    code=<< wesnoth.dofile "~add-ons/Random_Campaign/lua/cc_objectives.lua" >>
                [/lua]
            [/then]
            [else]
                [if]
                    {VARIABLE_CONDITIONAL level equals 7}
                    [then]
		                [objectives]
		                    side=1
		                    [objective]
		                        description= _ "Defeat enemy leader"
		                        condition=win
		                    [/objective]
		                    [objective]
		                        description= _ "Death of your leader"
		                        condition=lose
		                    [/objective]
		                    {IS_LAST_SCENARIO}
		                [/objectives]
                    [/then]
                    [else]
				        [modify_turns]
				            value=$random_campaign.turn_limit
				        [/modify_turns]
		                [objectives]
		                    side=1
		                    [objective]
		                        description= _ "Defeat enemy leader"
		                        condition=win
		                    [/objective]
		                    [objective]
		                        description= _ "Death of your leader"
		                        condition=lose
		                    [/objective]
		                    [objective]
		                        description= _ "Turns run out"
		                        condition=lose
		                        show_turn_counter=yes
		                        [show_if]
		                            {VARIABLE_CONDITIONAL random_campaign.turn_limit not_equals -1}
		                        [/show_if]
		                    [/objective]
		                    [gold_carryover]
				                bonus=no
				                carryover_percentage=0
				            [/gold_carryover]
		                [/objectives]
		            [/else]
		        [/if]
            [/else]
        [/if]

        # Set player's color, flag, & visibility choices
        [modify_side]
            side=1
            color=$player1.color
            flag=$player1.flag
            flag_icon=$player1.flag_icon
            fog=$random_campaign.fog
            shroud=$random_campaign.shroud
            village_gold=$random_campaign.village_gold
            village_support=$random_campaign.village_support
        [/modify_side]

        # Reinsert the recruitment_pattern because it doesn't persist with
        # rest of player data in a persistent side.
        [modify_side]
            side=1
            [ai]
                recruitment_pattern=$player1.recruitment_pattern
            [/ai]
        [/modify_side]
    [/event]

    [event]
        name=defeat
        #This code makes the scenario behave like
        # SP when defeated, and not show the map.
        [endlevel]
            result=defeat
            reveal_map=no
        [/endlevel]
    [/event]
#enddef

#define RC_SIDE_ENEMY SIDE ERA
    # Make a random enemy for the side & era specified
    [side]
        side={SIDE}
        team_name=Team 2
        controller=ai
        # the next two keys are a workaround for https://gna.org/bugs/index.php?20245
        save_id=ai
        current_player=_"ai"
        no_leader=yes
        # gold & income set in gold_and_income.cfg
        faction=Random
        allow_player=no
    [/side]

    [event]
        name=prestart
        # This makes an enemy faction.
        # This extracts the needed info out of the Era array to make the faction.
        {RC_LOAD_ERA}

        # Which era to pick from
        {VARIABLE index.era {ERA}}

        # enemy var set in RC_CHOOSE_ENEMY in next_scenario.cfg
        {LOOKUP_INDEX era[$index.era].multiplayer_side id $enemy index.faction}
        {CLEAR_VARIABLE enemy}

        # Now we have era & faction, randomly pick a leader
        [if]
            {VARIABLE_CONDITIONAL era[$index.era].multiplayer_side[$index.faction].random_leader equals $null}
            [then]
                {VARIABLE_OP leader rand $era[$index.era].multiplayer_side[$index.faction].leader}
            [/then]
            [else]
                {VARIABLE_OP leader rand $era[$index.era].multiplayer_side[$index.faction].random_leader}
            [/else]
        [/if]

        # Now that we have everything, make the side
        # Make the leader
        [unit]
            side={SIDE}
            id=Enemy Commander
            type=$leader
            canrecruit=yes
            random_gender=yes
            placement=leader
            [modifications]
                {RC_TRAIT_POWERFUL}
                {TRAIT_INTELLIGENT}
            [/modifications]
        [/unit]
        {RC_QUICK_4MP_LEADERS {SIDE}}

        # set enemy side settings
        {RC_COLOR_ADJUST $player1.color enemy_color}
        [modify_side]
            side={SIDE}
            color=$enemy_color
            recruit=$era[$index.era].multiplayer_side[$index.faction].recruit
            [insert_tag]
                name=ai
                variable=era[$index.era].multiplayer_side[$index.faction].ai
            [/insert_tag]
            fog=$random_campaign.fog
            shroud=$random_campaign.shroud
            village_gold=$random_campaign.village_gold
            village_support=$random_campaign.village_support
        [/modify_side]
        {CLEAR_VARIABLE enemy_color,leader,index}
        {RC_CLEAR_ERA}
    [/event]
#enddef
