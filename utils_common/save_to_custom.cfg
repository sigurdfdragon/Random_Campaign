#textdomain wesnoth-Random_Campaign

#define RC_SAVE_TO_CUSTOM
    [event]
        name=prestart

        # get global var
        {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign army            army          1}
        {VARIABLE_FROM_GLOBAL SigurdFireDragon_Custom_Campaign id_counter      id_counter    1}

        [if]
            {VARIABLE_CONDITIONAL cc_chosen_army.id equals $null}
            [then]
                # player used a new army, create new entry in list
                # increment the unique id
                {VARIABLE_OP id_counter add 1}

                # Find the proper index to store the army
                # This will place it at the end of the array,
                # or at slot 0 if this is the first army to be saved
                {VARIABLE index $army.length}

                # Save the unique id
                {VARIABLE army[$index].id $id_counter}

                # Name the Army
                {VARIABLE army[$index].name "$player1.language_faction - $player1.language_era"}

                # Copy flag, recruit, & recruitment_pattern from player var
                {VARIABLE army[$index].flag $player1.flag}
                {VARIABLE army[$index].flag_icon $player1.flag_icon}
                {VARIABLE army[$index].recruit $player1.recruit}
                {VARIABLE army[$index].recruitment_pattern $player1.recruitment_pattern}

                # Set starting_recall
                {VARIABLE army[$index].starting_recall 0}
            [/then]
            [else]
                # player used an existing army, save it back to it's spot in list
                # find the location to store it in by id
                # if can't find location, player is necroing a deleted army
                # and it will be put ant the end of the array
                {LOOKUP_INDEX army id $cc_chosen_army.id index}

                # Adjust the number of victories
                {VARIABLE_OP player1.victories add $cc_chosen_army.victories}

                # Copy vars from cc_chosen_army
                {VARIABLE army[$index].id $cc_chosen_army.id}
                {VARIABLE army[$index].flag $cc_chosen_army.flag}
                {VARIABLE army[$index].flag_icon $cc_chosen_army.flag_icon}
                {VARIABLE army[$index].name $cc_chosen_army.name}
                {VARIABLE army[$index].recruit $cc_chosen_army.recruit}
                {VARIABLE army[$index].recruitment_pattern $cc_chosen_army.recruitment_pattern}
                {VARIABLE army[$index].starting_recall $cc_chosen_army.starting_recall}
                # last_victory & victories recorded below

                # make sure old recall list is cleared
                {FOREACH army[$index].recall_list i}
                    {CLEAR_VARIABLE army[$index].recall_list[$i]}
                {NEXT i}
            [/else]
        [/if]

        # Store army to recall_list
        [store_unit]
            variable=army[$index].recall_list
            kill=no
            [filter]
                side=1 # 3 player version not yet supported for this
            [/filter]
        [/store_unit]

        {FOREACH army[$index].recall_list i}
            # clear underlying_id & id, ensuring uniqueness to prevent missing units
            # if two units have the same underlying_id, one will not appear on the recall list
            [if]
                {VARIABLE_CONDITIONAL army[$index].recall_list[$i].id equals "Commander"} # Custom Campaign Compatability
                [then]
                    {CLEAR_VARIABLE army[$index].recall_list[$i].underlying_id} # only clear this
                [/then]
                [else] # clear both
                    {CLEAR_VARIABLE army[$index].recall_list[$i].underlying_id}
                    {CLEAR_VARIABLE army[$index].recall_list[$i].id}
                [/else]
            [/if]
            {VARIABLE army[$index].recall_list[$i|].side 1} # restore side to 1 for viewing in the Custom Campaign Map
        {NEXT i}

        {VARIABLE army[$index].victories $player1.victories}

        # Record the time of victory
        [lua]
            code=<< wesnoth.set_variable("system_time", os.date()) >>
        [/lua]
        {VARIABLE army[$index].last_victory $system_time}

        # sort the army array here in case player goes directly to using it, so the list is in proper order
        [lua]
            code=<<
                helper = wesnoth.require "lua/helper.lua"
                local tArray = helper.get_variable_array("army")
                local function top_down_left_right(uFirstElem, uSecElem)
                  if uFirstElem.name == uSecElem.name then
                    return uFirstElem.id < uSecElem.id
                  end
                  return uFirstElem.name < uSecElem.name
                end
                table.sort(tArray, top_down_left_right)
                helper.set_variable_array("army", tArray)
            >>
        [/lua]

        # Record changes in Global Var
        {GLOBAL_VARIABLE SigurdFireDragon_Custom_Campaign army            army          1}
        {GLOBAL_VARIABLE SigurdFireDragon_Custom_Campaign id_counter      id_counter    1}

        # Clear unneeded vars
        {CLEAR_VARIABLE index,system_time,army,id_counter}
    [/event]
#enddef
