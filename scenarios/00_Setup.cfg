#textdomain wesnoth-Random_Campaign

[scenario]
    id=00_Setup
    name= _ "Random Campaign"
    map_data="{~add-ons/Random_Campaign/maps/00_Setup.map}"
    victory_when_enemies_defeated=no
    force_lock_settings=yes
    turns=30
    experience_modifier=100
    random_start_time=yes

    {DEFAULT_SCHEDULE}
    {RC_STORY_START}

    [side]
        side=1
        save_id=Player
        team_name=Player
        user_team_name=_"Player"
        side_name=_"Hero"
        controller=human
        persistent=yes
        no_leader=no
        faction_lock=no
        leader_lock=no
        color_lock=no
        gold_lock=no
        income_lock=no
        village_gold=1
        village_support=1
        fog=yes
        shroud=yes
        # leader attributes - need to be outside a leader tag to work properly
        id=Commander
        type=# attribute needed to satisfy wmllint. Must be empty or incorrect behavior on selection menu can occur.
        canrecruit=yes
        [modifications]
            {RC_TRAIT_POWERFUL}
            # will receive quick as well if 4mp and era used invokes {QUICK_4MP_LEADERS}
        [/modifications]
    [/side]

    {RC_DIALOG_START}

    [event]
        name=prestart

        # so player & enemy leaders receive quick trait if the selected era invokes {QUICK_4MP_LEADERS}
        {VARIABLE make_4mp_leaders_quick yes}
        # make sure player leader has a random name
        [modify_unit]
            [filter]
                id=Commander
            [/filter]
            name=""
            generate_name=yes
        [/modify_unit]
        # make sure setup map is not shown
        [modify_side]
            side=1
            shroud=yes
        [/modify_side]
        # loads the era array, which is used throughout the campaign.
        [lua]
            code=<< wesnoth.dofile "~add-ons/Random_Campaign/lua/load_era.lua" >>
        [/lua]
        # see if the era is compatible, and if so, choose where to start the campaign
        [switch]
            variable=era[0].era_type
            [case]
                value="default"
                {VARIABLE random_campaign.current_level 1}
            [/case]
            [case]
                value="heroes"
                {VARIABLE random_campaign.current_level 4}
                {VARIABLE random_campaign.aoh_campaign yes}
            [/case]
            [else]
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message=_"This era is not compatible. Random Campaign requires a Default or Age of Heroes style era. (i.e. level 2 units leading level 1 units, or level 3 units leading level 2 units.)"
                [/message]
                [endlevel]
                    result=defeat
                    linger_mode=no
                    replay_save=no
                    reveal_map=no
                [/endlevel]
                [return]
                [/return]
            [/else]
        [/switch]
        # has multiple uses in code below
        [store_side]
            side=1
        [/store_side]
        # Handle number values
        {RC_COLOR_CONVERT_NUM_TO_NAME side.color}
        # Hidden color select for unlisted colors
        [switch]
            variable=side.gold
            [case]
                value=25
                {VARIABLE side.color rails} # gray
            [/case]
            [case]
                value=50
                {VARIABLE side.color frozen} # silver
            [/case]
            [case]
                value=75
                {VARIABLE side.color gold}
            [/case]
        [/switch]
        # Use Dwarvish Runesmith unit line as leader if conditions are met
        [store_unit]
            [filter]
                id=Commander
            [/filter]
            variable=check_unit
        [/store_unit]
        [if]
            {VARIABLE_CONDITIONAL rc_dwarvish_runesmith_line boolean_equals yes}
            {VARIABLE_CONDITIONAL side.faction equals "Knalgan Alliance"}
            {VARIABLE_CONDITIONAL check_unit.race equals "dwarf"}
            [then]
                [switch]
                    variable=check_unit.level
                    [case]
                        value=2
                        [transform_unit]
                            id=Commander
                            transform_to=Dwarvish Runesmith
                        [/transform_unit]
                    [/case]
                    [case]
                        value=3
                        [transform_unit]
                            id=Commander
                            transform_to=Dwarvish Runemaster
                        [/transform_unit]
                    [/case]
                    [case]
                        value=4
                        [transform_unit]
                            id=Commander
                            transform_to=Dwarvish Arcanister
                        [/transform_unit]
                    [/case]
                    [else]
                        [transform_unit]
                            id=Commander
                            transform_to=Dwarvish Runesmith
                        [/transform_unit]
                    [/else]
                [/switch]
                [heal_unit]
                    [filter]
                        id=Commander
                    [/filter]
                [/heal_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE check_unit}
        # show color if player is stopping in setup scenario
        [modify_side]
            side=1
            color=$side.color
        [/modify_side]
        # set up the random_campaign container, which holds game information. some of these values are referenced in setting up future scenarios.
        # the ones that can be changed and will have effect in the next scenario are: random_start_time, color, fog, shroud, village_gold,
        # village_support, recruit, gold_percentage, income_percentage, map_set (requires map_choice var to be empty to have any effect)
        # add values from wesnoth.game_config
        [lua]
            code=<<
                local t = { }
                for i = 1, #wesnoth.scenario.modifications do
                    t[i] = wesnoth.scenario.modifications[i].id
                end
                wml.variables['random_campaign.active_modifications'] = stringx.join ( t )
                wml.variables['random_campaign.countdown'] = wesnoth.scenario.mp_settings.mp_countdown
                wml.variables['random_campaign.countdown_action_bonus'] = wesnoth.scenario.mp_settings.mp_countdown_action_bonus
                wml.variables['random_campaign.countdown_init_time'] = wesnoth.scenario.mp_settings.mp_countdown_init_time
                wml.variables['random_campaign.countdown_reservoir_time'] = wesnoth.scenario.mp_settings.mp_countdown_reservoir_time
                wml.variables['random_campaign.countdown_turn_bonus'] = wesnoth.scenario.mp_settings.mp_countdown_turn_bonus
                wml.variables['random_campaign.difficulty_define'] = wesnoth.scenario.mp_settings.difficulty_define
                wml.variables['random_campaign.era'] = wesnoth.scenario.era.id
                wml.variables['random_campaign.era_name'] = wesnoth.scenario.era.name
                wml.variables['random_campaign.experience_modifier'] = wesnoth.scenario.mp_settings.experience_modifier
                wml.variables['random_campaign.observer'] = wesnoth.scenario.mp_settings.observer
            >>
        [/lua]
        [set_variables]
            name=random_campaign
            mode=merge
            [value]
                color=$side.color
                dwarvish_runesmith_line=$rc_dwarvish_runesmith_line
                faction=$side.faction
                faction_name=$side.faction_name
                fog=$rc_fog
                gold_percentage=$rc_gold_percentage
                income_percentage=$rc_income_percentage
                map_set=$rc_map_set
                random_start_time=$rc_random_start_time
                recruit=$side.recruit
                shroud=$rc_shroud
                turn_limit=$rc_turn_limit
                version={~add-ons/Random_Campaign/dist/version}
                village_gold=$rc_village_gold
                village_support=$rc_village_support
            [/value]
        [/set_variables]
        # clear the campaign option vars to keep inspect clean
        {CLEAR_VARIABLE rc_map_set,rc_gold_percentage,rc_income_percentage}
        {CLEAR_VARIABLE rc_turn_limit,rc_village_gold,rc_village_support}
        {CLEAR_VARIABLE rc_fog,rc_shroud,rc_random_start_time}
        {CLEAR_VARIABLE rc_dwarvish_runesmith_line}
        # This code and following events allows a hidden way for the player to stop during the setup scenario
        # and use set_var for initial level, map, and enemy. The structure of firing a custom event and the
        # side turn end event is necessary to preserve proper order of event interaction if Custom Campaign is used.
        [if]
            {VARIABLE_CONDITIONAL side.income not_equals 0}
            [then]
                [fire_event]
                    id=rc first scenario
                [/fire_event]
            [/then]
            [else]
                # Player is stopping in the setup map, so make sure to show it.
                [modify_side]
                    side=1
                    fog=no
                    shroud=no
                [/modify_side]
                # present instructions to the player
                [objectives]
                    [objective]
                        condition=win
                        description=_"End Turn to start the campaign"
                    [/objective]
                    [note]
                        description=_"This is a hidden setup scenario"
                    [/note]
                    [note]
                        description=_"You can rename your leader"
                    [/note]
                    [note]
                        description=_"Debug mode can used to make adjustments to settings and side while here"
                    [/note]
                [/objectives]
            [/else]
        [/if]
        {CLEAR_VARIABLE side}
    [/event]

    [event]
        name=side turn end
        id=rc first scenario

        # macros are in utils/next_scenario.cfg
        {RC_FETCH_NEXT_MAP}
        {RC_CHOOSE_ENEMY}
        [endlevel]
            result=victory
            next_scenario=$next_scenario
            carryover_report=no
            carryover_percentage=0
            carryover_add=no
            bonus=no
            linger_mode=no
            save=yes
            replay_save=no
            reveal_map=no
        [/endlevel]
    [/event]
[/scenario]
