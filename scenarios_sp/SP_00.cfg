#textdomain wesnoth-Random_Campaign

[scenario]
    id=SP_00
    name= _ "SP_00"
    disallow_modification=Custom Campaign MP
    map_data="{~add-ons/Random_Campaign/maps/1P_Start.map}"
    experience_modifier=100
    random_start_time=yes
    turns=30

    [side]
        side=1
        save_id=Player1
        team_name=Team 1
        controller=human
        persistent=yes
        no_leader=no
        fog=yes
        shroud=yes
        village_gold=1
        village_support=1
        id="Commander"
        canrecruit=yes
        controller_lock=yes
        team_lock=yes
        gold_lock=yes
        income_lock=yes
    [/side]

    [event]
        name=prestart
        {RC_LOAD_ERA}
        [switch]
            variable=era[0].era_type
            [case]
                value="default"
            [/case]
            [case]
                value="heroes"
                {VARIABLE level_override 4}
                {VARIABLE random_campaign.aoh_campaign yes}
            [/case]
            [else]
                [message]
                    speaker=narrator
                    image=wesnoth-icon.png
                    message=_"This era is not compatiable. Random Campaign requires a Default or Age of Heroes style era. (i.e. level 2 units leading level 1 units, or level 3 units leading level 2 units.)"
                [/message]
                [endlevel]
                    result=defeat
                    linger_mode=no
                    replay_save=no
                    reveal_map=no
                [/endlevel]
            [/else]
        [/switch]
        {RC_CLEAR_ERA}
    [/event]

    # color flag modify side glitch workaround
    [event]
        name=prestart
        [store_side]
            side=1
            variable=temp
        [/store_side]
        {VARIABLE player1.color $temp.color}
        {CLEAR_VARIABLE temp}
        [modify_side]
            side=1
            flag="flags/flag-[1~4].png:150"
            flag_icon="flags/flag-icon.png"
        [/modify_side]
    [/event]

    [event]
        name=victory
        [store_side]
            side=1
            variable=player1
        [/store_side]
        [store_turns]
            variable=player1.turn_limit
        [/store_turns]
        [lua]
            code=<<
                wesnoth.set_variable("player1.difficulty_define", wesnoth.game_config.mp_settings.difficulty_define)
                wesnoth.set_variable("player1.experience_modifier", wesnoth.game_config.mp_settings.experience_modifier)
                wesnoth.set_variable("player1.countdown", wesnoth.game_config.mp_settings.mp_countdown)
                wesnoth.set_variable("player1.countdown_action_bonus", wesnoth.game_config.mp_settings.mp_countdown_action_bonus)
                wesnoth.set_variable("player1.countdown_init_time", wesnoth.game_config.mp_settings.mp_countdown_init_time)
                wesnoth.set_variable("player1.countdown_reservoir_time", wesnoth.game_config.mp_settings.mp_countdown_reservoir_time)
                wesnoth.set_variable("player1.countdown_turn_bonus", wesnoth.game_config.mp_settings.mp_countdown_turn_bonus)
                wesnoth.set_variable("player1.random_start_time", wesnoth.game_config.mp_settings.mp_random_start_time)
                wesnoth.set_variable("player1.use_map_settings", wesnoth.game_config.mp_settings.mp_use_map_settings)
                wesnoth.set_variable("player1.shuffle_sides", wesnoth.game_config.mp_settings.shuffle_sides)
                wesnoth.set_variable("player1.era", wesnoth.game_config.era.id)
                wesnoth.set_variable("player1.language_era", wesnoth.game_config.era.name)
            >>
        [/lua]

        # identify & store player faction
        {RC_LOAD_ERA}
        {FOREACH era[0].multiplayer_side i}
            [if]
                {VARIABLE_CONDITIONAL player1.recruit equals $era[0].multiplayer_side[$i].recruit}
                [then]
                    {VARIABLE player1.faction $era[0].multiplayer_side[$i].id}
                    {VARIABLE player1.language_faction $era[0].multiplayer_side[$i].name}
                [/then]
            [/if]
        {NEXT i}
        {RC_CLEAR_ERA}

        # This is added only so a recruitment_pattern can be extracted by save_to_custom.cfg
        # Otherwise we don't need a recruitment_pattern for a player side
        [lua]
            code=<<
                wesnoth.set_variable("temp_side", wesnoth.sides[1].__cfg)
            >>
        [/lua]
        {LOOKUP_INDEX temp_side.ai.aspect id "recruitment_pattern" index}
        {VARIABLE player1.recruitment_pattern "$temp_side.ai.aspect[$index].facet.value"}
        {CLEAR_VARIABLE temp_side,index}

        # Custom Campaign Compatability
        [if]
            {VARIABLE_CONDITIONAL cc_chosen_army.id equals $null}
            [then]
                [store_unit]
                    [filter]
                        id="Commander"
                    [/filter]
                    variable=temp_unit
                    kill=yes
                [/store_unit]
                # Copy only the info we need to the player var
                {VARIABLE player1.leader $temp_unit.type}
                {VARIABLE player1.gender $temp_unit.gender}
                {CLEAR_VARIABLE temp_unit}
                [unit]
                    side=1
                    id="Commander" # Custom Campaign Compatability
                    role="Leader"    # Custom Campaign Compatability
                    type=$player1.leader
                    gender=$player1.gender
                    canrecruit=yes
                    x=$player1.leader.x
                    y=$player1.leader.y
                    # All leaders get powerful trait
                    [modifications]
                        {RC_TRAIT_POWERFUL}
                        {TRAIT_INTELLIGENT}
                    [/modifications]
                [/unit]
                {RC_QUICK_4MP_LEADERS 1}
            [/then]
            [else]
                # Suppress Custom Campaign from running in future scenarios
                # Custom Campaign checks for this var
                # Set here and not earlier so Custom Campaign can run selection menu.
                {VARIABLE random_campaign.campaign true}
            [/else]
        [/if]
    [/event]

    {RC_DIALOG_START}
    {RC_FIRST_SCENARIO 1}
[/scenario]
